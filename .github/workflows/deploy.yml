name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
      - master

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: mom-gen
  REGION: asia-southeast2
  IMAGE: asia-southeast2-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/mom-gen/mom-gen:${{ github.sha }}

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Verify authentication
        run: |
          echo "Testing gcloud authentication..."
          gcloud auth list
          gcloud config list
          echo "Current project: $(gcloud config get-value project)"
      
      - name: Create Artifact Registry repository if not exists
        run: |
          # Check if repository exists, create if it doesn't
          if ! gcloud artifacts repositories describe mom-gen --location=asia-southeast2 &>/dev/null; then
            echo "Repository mom-gen not found, creating..."
            gcloud artifacts repositories create mom-gen \
              --repository-format=docker \
              --location=asia-southeast2 \
              --description="Docker repository for MOM Generator"
            echo "Repository mom-gen created successfully"
          else
            echo "Repository mom-gen already exists"
          fi
      
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker asia-southeast2-docker.pkg.dev
      
      - name: Build Docker image
        run: |
          docker build -t $IMAGE \
            --build-arg VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --build-arg VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_WEB_API_KEY }} \
            .
      
      - name: Push Docker image to Artifact Registry
        run: |
          echo "Pushing Docker image with retry logic..."
          for i in {1..3}; do
            echo "Push attempt $i..."
            if docker push $IMAGE; then
              echo "Push successful!"
              break
            else
              echo "Push attempt $i failed, retrying in 30 seconds..."
              sleep 30
            fi
          done
      
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $IMAGE \
            --region $REGION \
            --platform managed \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 1 \
            --no-allow-unauthenticated \
            --timeout 300 \
            --port 8080 \
            --set-env-vars "PROVIDER=openai,MODEL_ID=gpt-4o-mini,MAX_TOKENS=700,TEMPERATURE=0.2,LOG_LEVEL=info,CORS_ORIGIN=*,ALLOWLIST_EMAILS=wsnwrdna2@gmail.com,FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }},FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }},FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}"